[{"/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/index.js":"1","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/reportWebVitals.js":"2","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/components/NavBar.js":"3","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/components/CountriesList.js":"4","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/components/CountryDetail.js":"5","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/App.js":"6"},{"size":751,"mtime":1620329125669,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1620309375784,"results":"9","hashOfConfig":"8"},{"size":349,"mtime":1620334358023,"results":"10","hashOfConfig":"8"},{"size":1303,"mtime":1620334037534,"results":"11","hashOfConfig":"8"},{"size":2639,"mtime":1620333750726,"results":"12","hashOfConfig":"8"},{"size":528,"mtime":1620309375780,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1k619o8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/index.js",["30"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport NavBar from './components/NavBar'\nimport CountriesList from './components/CountriesList'\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"container\">\n        <div className=\"row\">\n          <CountriesList />\n          {/* React Router Route rendering the CountryDetails should go here */}\n        </div>\n      </div>\n    </div>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// comment skipped to stay organized\nreportWebVitals();","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/reportWebVitals.js",[],["31","32"],"/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/components/NavBar.js",["33"],"/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/components/CountriesList.js",["34"],"/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/components/CountryDetail.js",["35","36","37"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Link, Route} from 'react-router-dom'\n\nclass CountryDetail extends Component {\n\n    state = {\n        countryDetail: null,\n        countryByBorder: null\n    }\n    /*\n    getCountry = (countryBorder) => {\n        axios.get(`https://restcountries.eu/rest/v2/alpha/${countryBorder}/`)\n            .then((response) => {\n                const {name, borders} = response.data\n                let countryName = {\n                    name: name,\n                    borders: borders\n                }\n\n                this.setState({\n                    countryByBorder: name\n                })               \n            })\n    } */\n\n    getData = () => {\n         let countryCode = this.props.match.params.code\n         //console.log(this.props.match)\n         axios.get(`https://restcountries.eu/rest/v2/alpha/${countryCode}/`)\n            .then((response) => {\n                const {flag, name, capital, area, borders } = response.data\n                let detail = {\n                    flag: flag,\n                    name: name,\n                    capital: capital,\n                    area: area,\n                    borders: borders\n                }\n\n                this.setState({\n                    countryDetail: detail\n                })\n    \n               //console.log(this.state.countryDetail)\n            })\n            \n    }\n\n    componentDidMount(){\n        //console.log('Did Mount')\n        this.getData()\n    }\n\n    componentDidUpdate(){\n\n        let stateCode = this.state.countryDetail?.code\n        let propsCode = this.props.match?.params?.code\n        if (stateCode !== propsCode) {\n            this.getData()\n        }\n    }\n\n    render() {\n        const {countryDetail} = this.state\n        //const {countryByBorder} = this.state\n\n        if (!countryDetail) {\n            return <h1>Doing some magic...</h1>\n        }\n\n        return (\n            <div>\n                <img style={{width: \"40px\"}} src={countryDetail.flag} />\n                <h1> {countryDetail.name} </h1> \n                <h3>Capital {countryDetail.capital}</h3>\n                <hr />\n                <h3>Area {countryDetail.area}</h3>\n                <hr />\n                <h3>\n                    Borders \n                    <ul>\n                    { \n                        countryDetail.borders.map((borders, index) => {\n                            return <li>{borders} </li>\n                        })        \n                    }\n                    </ul>\n                </h3>  \n            </div>       \n        )\n    }\n}\n\n\nexport default CountryDetail;","/home/rebeca/Desktop/IRONHACK/WEEK7/DAY4/lab-wiki-countries/src/App.js",[],["38","39"],{"ruleId":"40","severity":1,"message":"41","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":11},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"48","line":2,"column":9,"nodeType":"42","messageId":"43","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":35,"column":29,"nodeType":"51","endLine":35,"endColumn":79},{"ruleId":"40","severity":1,"message":"48","line":3,"column":9,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},{"ruleId":"40","severity":1,"message":"52","line":3,"column":15,"nodeType":"42","messageId":"43","endLine":3,"endColumn":20},{"ruleId":"49","severity":1,"message":"50","line":74,"column":17,"nodeType":"51","endLine":74,"endColumn":73},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]